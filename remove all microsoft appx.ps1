
Function DebloatAll {
cls
    $Bloatware = @(
    #Unnecessary Windows 10 AppX Apps
    "*3DBuilder*"
    "*AppConnector*"
    "*BingFinance*"
    "*BingNews*"
    "*BingSports*"
    "*BingTranslator*"
    "*BingWeather*"
    "*GetHelp*"
    "*Getstarted*"
    "*Messaging*"
    "*Microsoft3DViewer*"
    "*MicrosoftSolitaireCollection*"
    "*MicrosoftPowerBIForWindows*"
    "*MicrosoftStickyNotes*"
    "*NetworkSpeedTest*"
    "*OneNote*"
    "*Lens*"
    "*Sway*"
    "*OneConnect*"
    "*People*"
    "*Print3D*"
    "*RemoteDesktop*"
    "*SkypeApp*"
    "*Wallet*"
    "*Whiteboard*"
    "*WindowsAlarms*"
    "*WindowsFeedbackHub*"
    "*WindowsMaps*"
    "*WindowsPhone*"
    "*WindowsSoundRecorder*"
    "*MicrosoftOfficeHub*"
    "*MixedReality.Portal*"
    "*ScreenSketch*"
    "*MicrosoftOfficeHub*"
    "*Microsoft.MSPaint*"
    "Microsoft.549981C3F5F10"
    "*Advertising.Xaml*"
    "*SolitaireCollection*"
    "*YourPhone*"
		
        #Sponsored Windows 10 AppX Apps
        #Add sponsored/featured apps to remove in the "*AppName*" format
		
        "*EclipseManager*"
        "*ActiproSoftwareLLC*"
        "*AdobePhotoshopExpress*"
        "*Duolingo-LearnLanguagesforFree*"
        "*PandoraMediaInc*"
        "*CandyCrush*"
        "*BubbleWitch3Saga*"
        "*Wunderlist*"
        "*Flipboard*"
        "*Twitter*"
        "*Facebook*"
        "*Royal Revolt*"
        "*Sway*"
        "*Speed Test*"
        "*Viber*"
        "*ACGMediaPlayer*"
        "*Netflix*"
        "*OneCalendar*"
        "*LinkedInforWindows*"
        "*HiddenCityMysteryofShadows*"
        "*Hulu*"
        "*HiddenCity*"
        "*AdobePhotoshopExpress*"
	"*RoyalRevolt2*"
	"*AutodeskSketchBook*"
	"*DisneyMagicKingdoms*"
	"*MarchofEmpires*"
	"*Plex*"
	"*FarmVille2CountryEscape*"
	"*CyberLinkMediaSuiteEssentials*"
	"*DrawboardPDF*"
	"*Asphalt8Airborne*"
	"*Keeper*"
	"*SpotifyMusic*"
	"*WinZipUniversal*"
	"*XING*"           
    	"*Roblox*"
    )
    foreach ($Bloat in $Bloatware) {
	$errpref = $ErrorActionPreference #save actual preference
    $ErrorActionPreference = "silentlycontinue"
        Get-AppxPackage -AllUsers -Name $Bloat| Remove-AppxPackage | Out-Null -ErrorAction SilentlyContinue
        Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like $Bloat | Remove-AppxProvisionedPackage -Online | Out-Null -ErrorAction SilentlyContinue
	$ErrorActionPreference = $errpref #restore previous preference
        Write-Output "Trying to remove $Bloat."
    }
}